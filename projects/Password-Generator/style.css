* {
  margin: 0;
  padding: 0;
}

ul {
  list-style: none;
}

body {
  font-family: "Segoe UI", sans-serif;
  width: 100vw;
  height: 100vh;
  background: linear-gradient(45deg, rgba(14,22,62,1) 0%, rgba(55,88,249,1) 100%);
}

.gen__title {
  font-size: 4rem;
  color: #fff;
  text-align: center;
  padding-top: 50px;
}

@media screen and (max-width: 475px) {
  .gen__title {
    font-size: 3rem;
  }
}

.gen__container {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  backdrop-filter: blur(10px);
  border:1px solid rgba(255, 255, 255, 0.18);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
  width: fit-content;
  padding: 4rem 8rem;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 17px;
  margin-right: auto;
  margin-left: auto;
}

@media screen and (max-width: 650px) {
  .gen__container {
    padding: 2rem 4rem;
  }
}

@media screen and (max-width: 450px) {
  .gen__container {
    padding: 1rem 2rem;
    border-radius: 12px;
  }
}

.gen__options-list {
  display: flex;
  padding: 50px 0;
  justify-content: center;
  gap: 1rem;
}

.gen__options {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  backdrop-filter: blur(10px);
  border:1px solid rgba(255, 255, 255, 0.18);
  border-radius: 10px;
  padding: 0.5rem 1rem;
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

.gen__options-title {
  color: white;
  font-size: 1.25rem;
  font-weight: 500;
}

.gen__button-container {
  position: absolute;
  bottom: 25px;
  right: 25px;
  display: flex;
  gap: 0.8rem;
}

.gen__generate,
.gen__reset,
.gen__style {
  color: white;
  font-size: 1.25rem;
  font-weight: 500;
  cursor: pointer;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  backdrop-filter: blur(10px);
  border:1px solid rgba(255, 255, 255, 0.18);
  border-radius: 10px;
  padding: 0.5rem 1rem;
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
  transition: box-shadow .15s,transform .15s;
}

.gen__generate {
  display: flex;
  align-items: center;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 50px;
}

.gen__generate:hover,
.gen__reset:hover,
.gen__style:hover {
  transform: translateY(-2px);
}

.gen__generate:active,
.gen__reset:active,
.gen__style:active {
  transform: translateY(2px);
}

.gen__password {
  color: white;
  font-size: 1.25rem;
}

@media screen and (max-width: 450px) {
  .gen__password {
    font-size: 1rem;
  }
}

.gen__options-numbers {
  width: 25px;
  border-radius: 4px;
  border: calc(var(--newBrdr, var(--size, 1)) * 1px) solid;
  outline: none;
  margin: 0;
  padding: 0;
  color: var(--newBrdrClr, var(--brdr));
  text-align: center;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  display: none;
  text-align: center;
}

.gen__options-numbers:hover {
  --newBrdrClr: var(--brdr-hovr);
}

.checkbox-wrapper-30 {
  display: flex;
}
.checkbox-wrapper-30 .checkbox {
  --bg: #fff;
  --brdr: #3758f9;
  --brdr-actv: #1e2235;
  --brdr-hovr: #2c4ef8;
  --dur: 0.6s;
  display: inline-block;
  width: 1rem;
  position: relative;
}
.checkbox-wrapper-30 .checkbox:after {
  content: "";
  width: 100%;
  padding-top: 100%;
  display: block;
}
.checkbox-wrapper-30 .checkbox > * {
  position: absolute;
}
.checkbox-wrapper-30 .checkbox input {
  -webkit-appearance: none;
  -moz-appearance: none;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  background-color: var(--bg);
  border-radius: 4px;
  border: calc(var(--newBrdr, var(--size, 1)) * 1px) solid;
  color: var(--newBrdrClr, var(--brdr));
  outline: none;
  margin: 0;
  padding: 0;
  transition: all calc(var(--dur) / 3) linear;
}
.checkbox-wrapper-30 .checkbox input:hover,
.checkbox-wrapper-30 .checkbox input:checked {
  --newBrdr: calc(var(--size, 1) * 2);
}
.checkbox-wrapper-30 .checkbox input:hover {
  --newBrdrClr: var(--brdr-hovr);
}
.checkbox-wrapper-30 .checkbox input:checked {
  --newBrdrClr: var(--brdr-actv);
  transition-delay: calc(var(--dur) /1.3);
}
.checkbox-wrapper-30 .checkbox input:checked + svg {
  --dashArray: 16 93;
  --dashOffset: 109;
}
.checkbox-wrapper-30 .checkbox svg {
  fill: none;
  left: 0;
  pointer-events: none;
  stroke: var(--stroke, var(--border-active));
  stroke-dasharray: var(--dashArray, 93);
  stroke-dashoffset: var(--dashOffset, 94);
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
  top: 0;
  transition: stroke-dasharray var(--dur), stroke-dashoffset var(--dur);
}
.checkbox-wrapper-30 .checkbox svg,
.checkbox-wrapper-30 .checkbox input {
  display: block;
  height: 100%;
  width: 100%;
}
